
======CREDENCIALES PARA ACCEDER A LA BASE DE DATOS ORACLE EN MAC M1 EN PARALLELS=======
SYSTEM
admin

10.211.55.4

=====CREAR UNA TABLA BASICA EN ORACLE====

CREATE TABLE DBGEORGE.PERSONA
( ID_PERSONA number(10) NOT NULL,
  NOMBRE varchar2(50) NOT NULL,
  APELLIDO varchar2(50) NOT NULL,
  PRIMARY KEY (ID_PERSONA)
);

=======CREAR UNA SECUENCIA EN ORACLE=====
Origen: https://www.tutorialesprogramacionya.com/oracleya/temarios/descripcion.php?cod=193

Sintaxis general:

Ejemplo:
create sequence DBGEORGE.seq_personas
  start with 1
  increment by 1
  maxvalue 99999
  minvalue 1;

 create sequence [schema.]NOMBRESECUENCIA
  start with VALORENTERO
  increment by VALORENTERO
  maxvalue VALORENTERO
  minvalue VALORENTERO
  cycle | nocycle;

- La cláusula "start with" indica el valor desde el cual comenzará la generación de números secuenciales. Si no se especifica, se inicia con el valor que indique "minvalue".

- La cláusula "increment by" especifica el incremento, es decir, la diferencia entre los números de la secuencia; debe ser un valor numérico entero positivo o negativo diferente de 0. Si no se indica, por defecto es 1.

- "maxvalue" define el valor máximo para la secuencia. Si se omite, por defecto es 99999999999999999999999999.

- "minvalue" establece el valor mínimo de la secuencia. Si se omite será 1.

- La cláusula "cycle" indica que, cuando la secuencia llegue a máximo valor (valor de "maxvalue") se reinicie, comenzando con el mínimo valor ("minvalue") nuevamente, es decir, la secuencia vuelve a utilizar los números. Si se omite, por defecto la secuencia se crea "nocycle".

Si no se especifica ninguna cláusula, excepto el nombre de la secuencia, por defecto, comenzará en 1, se incrementará en 1, el mínimo valor será 1, el máximo será 999999999999999999999999999 y "nocycle".

=======Para saber en que Schema nos encontramos Oracle========
select sys_context( 'userenv', 'current_schema' ) from dual;

=======Instalar Homebrew por primera vez=======
Información origen: 
https://blog.jdriven.com/2022/07/running-oracle-xe-with-testcontainers-on-apple-silicon/

Instalar homebrew con el siguiente comando
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

Ejecutar las instrucciones que da después de la instalación, que deben de ser algo así
- Run these three commands in your terminal to add Homebrew to your PATH:
    echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /Users/georgematrix/.zprofile
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/georgematrix/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
- Run brew help to get started

=====Ejecutar Colima=======
Hay que instalar docker con el siguiente comando
brew install docker

Hacer esto para configurar colima, luego hacer los dos exporta y por ultimo hacer el pull de la base de datos

colima start --arch x86_64 --memory 4
colima start --cpu 1 --arch x86_64 --memory 4
export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock
export DOCKER_HOST="unix://${HOME}/.colima/docker.sock"
docker pull gvenzl/oracle-xe

======PARA LEVANTAR LA BASE DE DATOS ORACLE EN DOCKER=====
Ejecute un nuevo contenedor de base de datos (los datos se eliminan cuando se elimina el contenedor, pero se mantienen durante los reinicios del contenedor):
docker run -d -p 1521:1521 -e ORACLE_PASSWORD=admin gvenzl/oracle-xe

Ejecute un nuevo contenedor de base de datos persistente (los datos se mantienen a lo largo de los ciclos de vida del contenedor):cdocker run -d -p 1521:1521 -e ORACLE_PASSWORD=admin -v oracle-volume:/opt/oracle/oradata gvenzl/oracle-xe

Para bajar el servicio
Docker stop [container id]

=============== PARA LEVANTAR JENKINS CON DOCKER==========
docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17

con volumenes

docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17


=======Conectar a base de datos Oracle=========
Desde aqui hacemos un pull de la base de datos
https://hub.docker.com/r/gvenzl/oracle-xe

Ejecutamos el segundo comando que es para que persista la información
docker run -d -p 1521:1521 -e ORACLE_PASSWORD=admin -v oracle-volume:/opt/oracle/oradata gvenzl/oracle-xe
Y cambiamos la clave, para este caso la clave fue admin

Descargamos el Sqldeveloper y probamos la coneccion con los siguientes datos:

Name: localhost
Usuario: SYS  /   SYSTEM
Contraseña: admin  /  admin
Rol: SYSDBA    /    valor por defecto
Nombre del host: localhost
Puerto: 1521
SID: xe

==========Para crear mas usuarios=======
Nos vamos a Otros Usuarios y le damos click derecho
Nos vamos a crear nuevo usuario
En la pestaña de usuario llenamos Usuario y ponemos una contraseña, en la parte de tablespace ponemos Users y temp
En roles otorgados ponemos todos en otorgado y administrar
En privilegios del sistema ponemos todos en otorgado y Opción Admin, a excepción de todos los que comienzan con SYS, como por ejemplo SYSBACKUP, SYSDBA, ya que si no dará error
En Cuotas SYSTEM Y USERS
Y por ultimo aplicar

NOTA:ES MUY IMPORTANTE QUE SE IDENTIFIQUE DONDE SE ESTAN CREANDO LAS TABLAS POR QUE SI NO SPRING NO LAS VA A VISUALIZAR Y DARA UN ERROR

REVISAR EJEMPLOS DE LA PAGINA:
https://mariocelis.com/sql/create-table/

===========Properties para coneccion a base de datos Oracle=============

spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/XE
spring.datasource.username=curso_oracle
spring.datasource.password=jorge1
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect


=========Properties para base de datos con Oracle - Docker==============

spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/XE
spring.datasource.username=SYSTEM
spring.datasource.password=admin
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect

=======Segun una pagina solo las mínimas configuraciones serian estas====
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=username
spring.datasource.password=password


======Comandos de Git==========
git status
git log --oneline				para ver los logs
git remote -v				para ver los remotos que se tienen, si no hay ninguno solo no da nada
git branch					para ver los branch (primero se tiene que hacer un commit si no se va a mostrar en blanco)
git commit -m "mensaje"			para hacer un commit
git push origin main			para hacer un push
git checkout "nombreDelBranch"	para cambiar de branch
git log --oneline
git reset --hard 749981e
git rebase      en ocaciones sirve para quitar mensajes, que no dejan avanzar, pero primero hacer un git fetch origin main


=====Comandos de configuración de git======
git initi
git config --global user.name putisima_madre
git config --global user.email putisima_madre@hotmail.com
git config user.password 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 - 11052023
git config user.password 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 - 15052023
git config user.password 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 - 20052023
git config user.password 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 - 28072023
git config user.password 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 - 05092023

git config user.password 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 - 19092023 - georgeelfurioso

git config user.password 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 - 20102023

git config user.password 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 - 23102023

git config user.password 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 - 31102023

git config user.password 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 - 05122023

git config user.password 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 - 22012024

git remote add origin https://github.com/putisimaMadre/oracle-docker.git

git remote add origin https://github.com/putisimaMadre/evalFormAngular.git

git remote add origin https://github.com/putisimaMadre/algebra21022024.git

Git remote add origin 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 - 22012024

git config user.password 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 - 27022024 

NOTA: cuando se tiene mas de una rama y se requiere crear un nuevo branch en el remoto (en internet), el proceso es el mismo.
Ejemplo de esto seria:
pit push origin desarrollo

=====CLAVE PARA MONGODB=====
mongodb+srv://admin:jorgeNieto1@cluster0.0j00ly0.mongodb.net/cliente12042023

=====MONGO====

Para poder hacer pruebas localmente con mongo hay que descargar
-Mongo compas
-MongoDB Shell
-MongoDB Community Server

Los dos ultimos hay que agregarlos al path de variables de Sistema de windos en el apartado de “Variables de sistema”

====MONGO EN MAC=====

Para levantar el servicio en Mac se pone el siguiente comando
brew services start mongodb-community@6.0

Para detenerlo
brew services stop mongodb-community@6.0

Para entrar en la consola
Mongosh

Comandos
Show bds
Show collections
Db.clientes.find()

Esta es la pagina donde esta toda la documentación
https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-os-x/

=====LARAVEL=====

Crear un Proyecto
composer create-project laravel/laravel example-app

crear modelo controller, micracion resource
php artisan make:model Product -mcr

Crear Cors
php artisan make:middleware Cors

Esto es lo que lleva el CORS
return $next($request)
            ->header("Access-Control-Allow-Origin", "http://sistemas-integrales-fw.com")
        //Métodos que a los que se da acceso
        ->header("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE")
        //Headers de la petición
        ->header("Access-Control-Allow-Headers", "X-Requested-With, Content-Type, X-Token-Auth, Authorization");

====ACTUALIZACION DE LO QUE LLEVA ADENTRO EL CORS 2024====
$response = $next($request);
$response->headers->set('Access-Control-Allow-Origin' , '*');
$response->headers->set('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PUT, DELETE');
$response->headers->set('Access-Control-Allow-Headers', 'Content-Type, Accept, Authorization, X-Requested-With, Application','ip');
return $response;


Y luego hay que ponerlo en el Kernel

En el apartado de $middlewareAliases
'cors' => \App\Http\Middleware\Cors::class,

Pagina para ver algunos usos de Query Builder
https://laravel.com/docs/10.x/queries#where-clauses

====Para produccion en CPanel====

-en cPanel crear la base de datos con su respectivo usuario y crear la tabla
-zipear el proyecto de laravel y modificar los valores del .env para que coincida con los datos del server de cPanel
-si el proyecto se descomprime en la carpeta public y poder probar el servicio rest quedaria asi:
http://sistemas-integrales-fw.com/p24042023l/public/api/clientes -----> ejemplo
-hay que revisar que la version de php sea la correspondiente para que el proyecto de laravel funcione correctamente

-se tiene que generar el archivo .htcaccess con lo siguiente:

<IfModule mod_rewrite.c>
RewriteEngine on
RewriteCond %{REQUEST_FILENAME} -s [OR]
RewriteCond %{REQUEST_FILENAME} -l [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^.*$ - [NC,L]

RewriteRule ^(.*) /index.html [NC,L]
</IfModule>

si todo funciona correctamente se debe de poder accesar a una liga similar a esta: donde se tiene el dominio, luego el nombre del proyecto de laravel y luego la ruta
http://sistemas-integrales-fw.com/p24042023l/public/api/clientes



======Angular======

Para trabajar con Angular Material y sus componentes, primeFlex y AngularUI
Instalar:
ng add @angular/material
npm install primeflex --save
npm install @coreui/angular@4
npm install @coreui/coreui
npm install @coreui/icons-angular

Y en el angular.json dejarlo de la siguiente manera

   "src/styles.css",
   "@angular/material/prebuilt-themes/indigo-pink.css",
   "node_modules/@coreui/coreui/dist/css/coreui.css",
   "node_modules/primeflex/primeflex.scss"

En el proyecto p25102023a esta un ejemplo


====Para produccion=====
ng build --configuration production

========Android Studio=====

Para que funcione correctamente hay que ver primero que en la BIOS este habilitada la virtualizacion
despues hay que ir al buscador de windows y escribir hyper y escoger la opcion que dice activar o desactivar caracteristicas de windows
una vez ahi hay que revisar que las opciones de:
-plataforma de hypervisor de windows
-plataforma de maquina virtual

deben de estar palomeada


=======Validacion Kotlin Email=======

return !TextUtils.isEmpty(this) && android.util.Patterns.EMAIL_ADDRESS.matcher(this).matches()

=====LINUX checkFiles======

-b FILE

FILE exists and is block special

-c FILE

FILE exists and is character special

-d FILE

FILE exists and is a directory

-e FILE

FILE exists

-f FILE

FILE exists and is a regular file

-g FILE

FILE exists and is set-group-ID

-g FILE

FILE exists and is owned by the effective group ID

https://www.educatica.es/informatica/sistemas-operativos/gnu-linux-bash/shell-scripts/checkfile-sh/

=======Darle permiso al archivo======
chmod +x /ruta/al/archivo.sh


======Crear y editar un archivo vía SSH====

[server]$ vim index.html

Presiona la letra i en tu teclado para ingresar el modo INSERT (insertar).
Comienza a escribir dentro del archivo.
Cuando termines de editar el archivo, presiona la tecla ESC. Esto te saca del modo INSERT y -- INSERT -- desaparece de la parte inferior izquierda de tu terminal.
Para guardar el archivo, escribe dos puntos (:) seguido de wq
:wq

====Todo con respecto a las variables=====

https://atareao.es/tutorial/scripts-en-bash/variables-en-bash/


======checkFiles PowerShell======
https://hovermind.com/powershell/file-and-folder.html#check-file-and-folder-exists

=====Variables Globales PowerShell======

$global:myglobalvariable="This is a PowerShell global variable"
or
$global:myglobalvariable2 = $null


===========PARAMETROS EN BASH LINUX=========

https://es.ccm.net/ordenadores/linux/2368-bash-los-parametros/


========Bash Wildcard=======
SON LOS PARAMETROS RAROS QUE SE LLEGAN A VER EN BASH SCRIPTING DE LINUX LOS MAS 
COMUNES SON EL ASTERISCO EL SIGNO DE INTERROGACION Y LOS CORCHETES

El asterisco (*) se utiliza para buscar un carácter en particular cero o más
veces. El signo de interrogación (?) se utiliza para buscar un número 
fijo de caracteres donde cada signo de interrogación (?) indica cada 
carácter. Los corchetes se utilizan para hacer coincidir los caracteres 
de un rango definido o un grupo de caracteres

https://linuxhint.com/bash_wildcard_tutorial/


==========DATE============

https://blog.itpro.tv/get-date-powershell-cmdlet/

=====CURSO DE LINUX Y BASH========
https://aprendeaprogramar.com/mod/resource/view.php?id=174

==================CLASSPATH================
La variable de entorno CLASSPATH es utilizada por Java Runtime 
Environment (JRE) o por Java Development Kit (JDK) para encontrar 
las clases Java y otros archivos de recursos del sistema operativo.

===============INSTRUCCIONES DE DOCKER=================
docker build . -t "demodocker:v1" . <===== PARA PONERLE NOMBRE A LA NUEVA IMAGEN

====================================PARA VER LOS LOGS EN DOCKER===============================
Docker ps -a      =====> 	para ver los contenedores

Seleccionar el nombre y poner el siguiente comando

docker logs gallant_ramanujan

NOTA: para poner el COPY hay que ponerlo así
COPY target/cliente1-0.0.1-SNAPSHOT.jar .      <-----CORRECTO
COPY ./target/cliente1-0.0.1-SNAPSHOT.jar .    <-----INCORRECTO

NOTA2: para angular debe de coincidir la version que se tiene en la maquina
Por ejemplo si al hacer un note --version da la version 18.12, hay que buscar una en el repositorio
Que sea igual para este caso por ejemplo quedo con esta node:18.12-alpine3.17

Referencia: https://serengetitech.com/tech/how-to-dockerize-your-angular-14-application/

====================DOCKERIZAR UNA APP ANGULAR=====================


Primero crear el archivo Dockerfile en la raíz del proyecto con los siguientes datos

FROM nginx:1.13.9-alpine

COPY ./dist/p28102023a/ /usr/share/nginx/html.    ====> Nota: aqui hay que cambiarle el nombre del proyecto

COPY ./nginx.conf /etc/nginx/conf.d/default.conf

CMD ["nginx", "-g", "daemon off;"]

=========Luego crear el archivo nginx.conf con los siguientes datos=============

server {
  listen 80;

  # send headers in one peace
  tcp_nopush on;
  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;
  # request timed out -- default 60
  client_body_timeout 20;
  # if client stop responding, free up memory -- default 60
  send_timeout 20;
  # server will close connection after this time -- default 75
  keepalive_timeout 40;
  # reduce the data that needs to be sent over network
  gzip on;
  gzip_min_length 200;
  gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/x-web-app-manifest+json
    application/xml
    application/xhtml+xml
    application/x-font-ttf
    application/octet-stream
    font/opentype
    image/x-icon
    image/svg+xml;
  gzip_proxied expired no-cache no-store private auth;
  gzip_http_version 1.1;
  gzip_comp_level 5;
  gzip_vary on;
  gzip_disable msie6;

  location / {
    alias /usr/share/nginx/html/;
    try_files $uri $uri/ /index.html;
  }
}

============Después hacer un=========

npm install. ======> solo si no tiene el node_modules
npm run build

==========Después construir el contenedor===============

docker build -t my-project .

==========Por ultimo============

docker run -p 127.0.0.1:4000:80 image_id

Nota el puerto debe de tener el 127.0.0.1 por que si no no funcionara

====================================ORACLE CREAR NUEVOS USUARIOS==============================
https://www.youtube.com/watch?v=9dPzO2PpnvM


=====================================MYSQL DESDE TERMINAL=====================================
Poner este comando en la terminal
/usr/local/mysql/bin/mysql -u root -p

====================================MYSQL PARA CREAR UNA RELACION=============================
ALTER TABLE ventas ADD CONSTRAINT fk_compras FOREIGN KEY (id_compras) REFERENCES compras (idcompras);

====================================JENKINGS================================

docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk17

https://boozallen.github.io/sdp-docs/learning-labs/1/local-development/3-configure-jenkins.html

=================================Ejemplo de java con jenkins==================================

https://www.fosstechnix.com/how-to-build-java-project-using-maven-in-jenkins/

Lobito10
0508@

===========================Direccion de JAVA 5 de Diciembre 2023 en Mac M1========
/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/bin

======================VARIABLES GLOBALES EN MAC========================
https://mkyong.com/java/maven-java_home-is-not-defined-correctly-on-mac-osx/

=======================identificar que puerto esta ocupado en windows=============

Netstat -aon | findstr 8080

Este comando nos dara información y entre ella esta el pid, este hay que buscarlo en el administrador de tareas y finalizar tarea

==============================MAPEO DE TABLAS CON INTELLIJ============================
poner la opcion de properties
des-tildar todas las llaves azules
recordar que para cada relacion debe de estar su contraparte en las dos tablas, osea 
debe estar su relacion

==============================ACTIVAR O DESACTIVAR MACHINE LEARNING INTELLIJ========================
Editor->general->code
desactivar machine learning

==============================INSTALAR NVM=================================
Es una una herramienta que permite gestionar múltiples versiones de Node.js en un mismo sistema

https://www.youtube.com/watch?v=I8H4wolRFBk
https://github.com/nvm-sh/nvm?tab=readme-ov-file#installing-and-updating

https://pensemosweb.com/instalar-nodejs-nvm-macos-linux-windows/

==============================OPCIONES CON MULTIPLES VERSIONES DE NODE===================

nvm ls-remote  ------------>    para verificar las versiones que hay
nvm install v16.20.2   ----------->    Se instala la version requerida
nvm use v16.20.2  ---------->     si no se actualiza, utilizar este comando


==============================LEVANTAR MULTIPLES INSTANCIAS================

Add VM Options

-Dserver.port=8003

==========================comandos para brew en Mac============================
Brew search php    -------------> 	para buscar todo los paquetes instalados de php
Brew install php@8.2   ------------->		para instalar una version de php
Brew unlink php  ----------------->    para deslinkear una version de php
Brew link php@8.2  ------------>      para linkear una version determinada de php


=========================levantar apache en Mac==============================
Sudo apachectl start